{"version": 3, "mappings": ";;;;;;;;;;;;AAKC;;;;AAMA;;AAEI,UAAM;AAEN,kBAAc,EAAC,AAAD,UAAU,AAAV,wCAAiD,AAAjD,QAAwD,AAAxD,YAAmE,AAAnE,UAA4E,AAA5E,OAAkF,AAAlF,OAAwF,AAAxF,QAA+F,AAA/F,SAAuG,AAAvG,MAA4G,AAA5G,QAAmH,AAAnH,MAAwH,AAAxH,QAA+H,AAA/H;AAEd,QAAI,SAAA,IAAa,AAAb,iBAAwB,AAAxB;AAEJ,QAAI,KAAA,MAAW,EAAX;AACJ,QAAG,EAAE,AAAF;AACH,QAAI,EAAE,AAAF;AACJ,QAAI,EAAE,AAAF;AAEJ,UAAM;AACN,mCAAS,iBAAT,gBAAA,gBAAA;;AACI,YAAA,OAAW,EAAE,AAAF,AAAX,AADJ;;AAGA,WAAO,AAjBX;;AAqBA;;AAEI,QAAI,aAAa,AAAb;AACJ,QAAI,aAAa,AAAb;AAEJ,mCAAS,iBAAT,gBAAA,gBAAA;;AACI,uCAAS,iBAAT,gBAAA,gBAAA;;AACI,AAAG,gBAAA,MAAG,AAAH,AAAH;AACI,uBAAO,AADX;AADJ;AADJ;;AAKA,WAAO,AAVX;;AAYA;;AAEI,QAAI,aAAa,AAAb;AACJ,QAAI,aAAa,AAAb;AACJ,UAAM;AAEN,mCAAS,iBAAT,gBAAA,gBAAA;;AACI,uCAAS,iBAAT,gBAAA,gBAAA;;AACI,AAAG,gBAAA,MAAG,AAAH,AAAH;AACI,oBAAA,OAAW,AAAX,AADJ;AADJ;AADJ;;AAKA,WAAO,AAXX", "sources": ["Python_Request.py"], "names": ["url", "querystring", "word", "r", "requests", "requests.get", "L", "json", "json.loads", "r.text", "K", "out", "out.append", "i", "made_request", "w1", "w2", "j"], "sourcesContent": ["# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Feb  1 10:06:32 2020\n\n@author: morin\n\"\"\"\n\nimport requests\nimport json\n\n\ndef made_request(word):\n\n    url = \"https://api.wordassociations.net/associations/v1.0/json/search?\"\n\n    querystring = {\"apikey\":\"4b8acd47-07b3-4d38-ab4d-2480c73669e9\",\"type\":\"stimulus\",\"indent\":\"yes\",\"pos\":\"noun\",\"limit\":\"50\",\"lang\":\"en\",\"text\":word}\n\n    r = requests.get(url,params=querystring)\n\n    L = json.loads(r.text)\n    K= L['response']\n    K = K[0]\n    K = K['items']\n    \n    out = []\n    for i in K:\n        out.append(i['item'])\n    \n    return out\n\n\n\ndef main(w1,w2):\n    \n    L = made_request(w1)\n    K = made_request(w2)\n    \n    for i in L:\n        for j in K:\n            if(i==j):\n                return i\n    \n    return 0\n\ndef main_list(w1,w2):\n    \n    L = made_request(w1)\n    K = made_request(w2)\n    out = []\n    \n    for i in L:\n        for j in K:\n            if(i==j):\n                out.append(i)            \n    \n    return out\n    \n    \n\n"]}