{"version": 3, "mappings": "AAKC;AAAA;AAAA;AAAA;;;AAMA;;IAEIA,MAAM;IAENC,cAAc,CAAC,QAAD,EAAU,sCAAV,EAAiD,MAAjD,EAAwD,UAAxD,EAAmE,QAAnE,EAA4E,KAA5E,EAAkF,KAAlF,EAAwF,MAAxF,EAA+F,OAA/F,EAAuG,IAAvG,EAA4G,MAA5G,EAAmH,IAAnH,EAAwH,MAAxH,EAA+HC,IAA/H;IAEdC,IAAIC,QAAAC,IAAA,CAAaL,GAAb,aAAwBC,YAAxB;IAEJK,IAAIC,IAAAC,MAAA,CAAWL,CAAAM,KAAX;IACJC,IAAGJ,CAAA,CAAE,UAAF;IACHI,IAAIA,CAAA,CAAE,CAAF;IACJA,IAAIA,CAAA,CAAE,OAAF;IAEJC,MAAM;IACN,+BAASD,uBAAT,iBAAA,YAAA;;QACIC,GAAAC,OAAA,CAAWC,CAAA,CAAE,MAAF,CAAX;IADJ;IAGA,OAAOF;AAjBX;AAqBA;;IAEIL,IAAIQ,YAAA,CAAaC,EAAb;IACJL,IAAII,YAAA,CAAaE,EAAb;IAEJ,+BAASV,uBAAT,iBAAA,YAAA;;QACI,+BAASI,uBAAT,iBAAA,YAAA;;YACI,IAAG,CAAAG,CAAA,IAAA,CAAGI,CAAH,CAAH;gBACI,OAAOJ;YADX;QADJ;IADJ;IAKA,OAAO;AAVX;AAYA;;IAEIP,IAAIQ,YAAA,CAAaC,EAAb;IACJL,IAAII,YAAA,CAAaE,EAAb;IACJL,MAAM;IAEN,+BAASL,uBAAT,iBAAA,YAAA;;QACI,+BAASI,uBAAT,iBAAA,YAAA;;YACI,IAAG,CAAAG,CAAA,IAAA,CAAGI,CAAH,CAAH;gBACIN,GAAAC,OAAA,CAAWC,CAAX;YADJ;QADJ;IADJ;IAKA,OAAOF;AAXX", "sources": ["Python_Request.py"], "names": ["url", "querystring", "word", "r", "requests", "requests.get", "L", "json", "json.loads", "r.text", "K", "out", "out.append", "i", "made_request", "w1", "w2", "j"], "sourcesContent": ["# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Feb  1 10:06:32 2020\n\n@author: morin\n\"\"\"\n\nimport requests\nimport json\n\n\ndef made_request(word):\n\n    url = \"https://api.wordassociations.net/associations/v1.0/json/search?\"\n\n    querystring = {\"apikey\":\"4b8acd47-07b3-4d38-ab4d-2480c73669e9\",\"type\":\"stimulus\",\"indent\":\"yes\",\"pos\":\"noun\",\"limit\":\"50\",\"lang\":\"en\",\"text\":word}\n\n    r = requests.get(url,params=querystring)\n\n    L = json.loads(r.text)\n    K= L['response']\n    K = K[0]\n    K = K['items']\n    \n    out = []\n    for i in K:\n        out.append(i['item'])\n    \n    return out\n\n\n\ndef main(w1,w2):\n    \n    L = made_request(w1)\n    K = made_request(w2)\n    \n    for i in L:\n        for j in K:\n            if(i==j):\n                return i\n    \n    return 0\n\ndef main_list(w1,w2):\n    \n    L = made_request(w1)\n    K = made_request(w2)\n    out = []\n    \n    for i in L:\n        for j in K:\n            if(i==j):\n                out.append(i)            \n    \n    return out\n    \n    \n\n"]}